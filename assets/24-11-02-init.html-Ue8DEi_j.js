import{_ as s,c as a,d as e,o as p}from"./app-oBzUr-Tb.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="建站" tabindex="-1"><a class="header-anchor" href="#建站"><span>建站</span></a></h1><p>我是比较守旧的人，在自媒体和短视频如此发达的今天，我还是想有自己的一个博客，以前也断断续续搞过几次，总是虎头蛇尾，不了了之。</p><h2 id="原则" tabindex="-1"><a class="header-anchor" href="#原则"><span>原则</span></a></h2><ul><li>前后端分离</li><li>内容（Markdown）与样式分离</li><li>GitOps，自动部署</li></ul><h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h2><p>我对前端不甚了了，每次上手都是浅尝辄止，希望这次能走得远一点。</p><ul><li>VuePress</li></ul><h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><p>为域名进行工信部和公安部备案。</p><h2 id="本地搭建" tabindex="-1"><a class="header-anchor" href="#本地搭建"><span>本地搭建</span></a></h2><p>根据 <a href="https://v2.vuepress.vuejs.org/zh/guide/getting-started.html" target="_blank" rel="noopener noreferrer">VuePress 文档</a> 来的。</p><h3 id="依赖环境" tabindex="-1"><a class="header-anchor" href="#依赖环境"><span>依赖环境</span></a></h3><ul><li>Node.js 要求 v18.19.0+ 本地 v23.1.0</li><li>包管理器 npm 本地 10.9.0</li></ul><p>如果使用 yarn 等其它包管理器也可以，实测下来，在 Docker 环境下用 yarn 配置镜像源后速度也很慢，用 npm 会好一些，本地用哪个都无感。</p><p>yarn1和 yarn2 的使用稍有差异，yarn1 使用的配置是 <code>.yarnrc</code>，而 yarn2 用的是支持复杂结构的 <code>.yarnrc.yml</code>，引入了插件系统并支持多工作区，yarn2 支持使用 PnP（Plug’n’Play）模型来管理依赖。如果为了与其它包管理器保持兼容，需要在 <code>.yarnrc.yml</code> 中设置 <code>nodeLinker: &#39;node-modules&#39;</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line highlighted"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> corepack</span>
<span class="line">corepack <span class="token builtin class-name">enable</span></span>
<span class="line"><span class="token function">yarn</span> init <span class="token parameter variable">-2</span></span>
<span class="line highlighted"><span class="token function">yarn</span> <span class="token builtin class-name">set</span> version stable</span>
<span class="line highlighted"><span class="token function">yarn</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><p>可以用 <a href="https://www.npmjs.com/package/create-vuepress" target="_blank" rel="noopener noreferrer">create-vuepress</a> 直接创建项目模板：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> init vuepress my-blog</span>
<span class="line"><span class="token function">git</span> init</span>
<span class="line"><span class="token function">npm</span> init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以手动创建：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> my-blog <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> my-blog</span>
<span class="line"><span class="token function">git</span> init</span>
<span class="line"><span class="token function">npm</span> init</span>
<span class="line"><span class="token comment"># 安装 vuepress</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> vuepress@next</span>
<span class="line"><span class="token comment"># 安装打包工具和主题</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @vuepress/bundler-vite@next @vuepress/theme-default@next</span>
<span class="line"><span class="token function">mkdir</span> docs</span>
<span class="line"><span class="token function">mkdir</span> docs/.vuepress</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建 VuePress 配置文件 <code>docs/.vuepress/config.js</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> viteBundler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/bundler-vite&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/theme-default&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">bundler</span><span class="token operator">:</span> <span class="token function">viteBundler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建好的项目结构如下：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">.</span></span>
<span class="line">├─ docs</span>
<span class="line">│  ├─ README.md</span>
<span class="line">│  └─ .vuepress</span>
<span class="line">│     └─ config.js</span>
<span class="line">└─ package.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>package.json</code> 中添加一些 <a href="https://classic.yarnpkg.com/zh-Hans/docs/package-json#toc-scripts" target="_blank" rel="noopener noreferrer">scripts</a> ：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">{</span>
<span class="line">  &quot;scripts&quot;: {</span>
<span class="line">    &quot;docs:dev&quot;: &quot;vuepress dev docs&quot;,</span>
<span class="line">    &quot;docs:build&quot;: &quot;vuepress build docs&quot;</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行项目" tabindex="-1"><a class="header-anchor" href="#运行项目"><span>运行项目</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> run docs:dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>VuePress 会在 <a href="http://localhost:8080/" target="_blank" rel="noopener noreferrer">http://localhost:8080</a> 启动一个热重载的开发服务器。当你修改你的 Markdown 文件时，浏览器中的内容也会自动更新。</p><h3 id="配置项目" tabindex="-1"><a class="header-anchor" href="#配置项目"><span>配置项目</span></a></h3><p>用时半天。</p><h3 id="主题" tabindex="-1"><a class="header-anchor" href="#主题"><span>主题</span></a></h3><p>默认主题 VS Hope 主题</p><p>https://theme-hope.vuejs.press/zh/</p><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><p>docker + github webhook</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> node:18</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> sed -i <span class="token string">&#39;s|http://deb.debian.org/debian|https://mirrors.cloud.tencent.com/debian|g&#39;</span> /etc/apt/sources.list.d/debian.sources &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    apt-get clean &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    apt-get update &amp;&amp; <span class="token operator">\\</span></span>
<span class="line">    apt-get install -y git openssh-client</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> package.json yarn.lock .yarnrc ./</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> yarn config set registry https://registry.npmmirror.com</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token instruction"><span class="token keyword">RUN</span> useradd -u 1001 -ms /bin/bash appuser &amp;&amp; chown -R appuser:appuser /app</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">USER</span> appuser</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> . .</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 暴露端口</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 3030</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动 webhook.js</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;node&quot;</span>, <span class="token string">&quot;webhook.js&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 Docker 运行环境和本地不同，所以需要添加 <code>.dockerignore</code> 文件：</p><p>由于使用了腾讯云，所以更换了镜像源。</p><p>Webhook 需要 git 仓库的权限，所以添加了与本地用户同组的 <code>appuser</code> 并配置了 SSH 访问权限。</p><p>腾讯云主机执行 <code>yarn install</code> 速度非常慢，设置了 <code>RUN yarn config set registry https://registry.npmmirror.com</code> 也没有效果。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">npm-debug.log</span>
<span class="line">.git</span>
<span class="line">.DS_Store</span>
<span class="line">*.env</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 webhook.js 中没有重新执行 <code>yarn install</code> 而是直接 <code>yarn docs:build</code> 构建。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> simpleGit <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;simple-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">REPO_DIR</span> <span class="token operator">=</span> <span class="token string">&#39;/app&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">BRANCH_NAME</span> <span class="token operator">=</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">;</span> <span class="token comment">// or your specific branch</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取 ISO 格式的时间戳</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">log_error</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取 ISO 格式的时间戳</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timestamp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> payload <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>payload<span class="token punctuation">.</span>ref <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">refs/heads/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">BRANCH_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Received push on </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">BRANCH_NAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, starting deployment...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> git <span class="token operator">=</span> <span class="token function">simpleGit</span><span class="token punctuation">(</span><span class="token constant">REPO_DIR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    git<span class="token punctuation">.</span><span class="token function">pull</span><span class="token punctuation">(</span><span class="token string">&#39;origin&#39;</span><span class="token punctuation">,</span> <span class="token constant">BRANCH_NAME</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> update</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">log_error</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to pull repository:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Deployment failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>update <span class="token operator">&amp;&amp;</span> update<span class="token punctuation">.</span>summary<span class="token punctuation">.</span>changes<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token string">&#39;Repository updated, building...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Run your build commands here</span></span>
<span class="line">        <span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;yarn docs:build&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">cwd</span><span class="token operator">:</span> <span class="token constant">REPO_DIR</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">log_error</span><span class="token punctuation">(</span><span class="token string">&#39;Build failed:&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Build failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">          <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token string">&#39;Build success.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Deployed successfully&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token string">&#39;No changes in repository&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;No changes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3030</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">log_info</span><span class="token punctuation">(</span><span class="token string">&#39;Webhook listener running on port 3030&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nginx-配置" tabindex="-1"><a class="header-anchor" href="#nginx-配置"><span>NGINX 配置</span></a></h3><div class="language-5 line-numbers-mode" data-highlighter="prismjs" data-ext="5" data-title="5"><pre><code><span class="line">server {</span>
<span class="line">    listen 80;</span>
<span class="line">    server_name blog.yulefox.com;</span>
<span class="line"></span>
<span class="line">    location /webhook {</span>
<span class="line">        proxy_pass http://vuepress-webhook:3030;</span>
<span class="line">        proxy_set_header Host $host;</span>
<span class="line">        proxy_set_header X-Real-IP $remote_addr;</span>
<span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span>
<span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>确认 URL 不包含不必要的<strong>尾随斜杠</strong>或路径。</p><p>我这里由于宿主机上已经启动了 NGINX，所以没有再使用 Docker 启动。</p><h3 id="测试-webhook" tabindex="-1"><a class="header-anchor" href="#测试-webhook"><span>测试 WebHook</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST https://blog.yulefox.com/webhook/ <span class="token punctuation">\\</span></span>
<span class="line">     <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">     <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;key1&quot;: &quot;value1&quot;, &quot;key2&quot;: &quot;value2&quot;}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 webhook 实现自动部署：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">Received push on main, starting deployment<span class="token punctuation">..</span>.</span>
<span class="line">Failed to pull repository: GitResponseError: detected dubious ownership <span class="token keyword">in</span> repository at <span class="token string">&#39;/app&#39;</span></span>
<span class="line">    at Object.onError <span class="token punctuation">(</span>/app/node_modules/simple-git/dist/cjs/index.js:4124:21<span class="token punctuation">)</span></span>
<span class="line">    at /app/node_modules/simple-git/dist/cjs/index.js:1934:25</span>
<span class="line">    at new Promise <span class="token punctuation">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line">    at GitExecutorChain.handleTaskData <span class="token punctuation">(</span>/app/node_modules/simple-git/dist/cjs/index.js:1925:16<span class="token punctuation">)</span></span>
<span class="line">    at GitExecutorChain.<span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span>/app/node_modules/simple-git/dist/cjs/index.js:1909:44<span class="token punctuation">)</span></span>
<span class="line">    at Generator.next <span class="token punctuation">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token punctuation">)</span></span>
<span class="line">    at fulfilled <span class="token punctuation">(</span>/app/node_modules/simple-git/dist/cjs/index.js:52:24<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--add</span> safe.directory /app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如此一来，直接执行 git push 就可以实现博客内容的自动部署更新了。</p>`,55)]))}const o=s(t,[["render",l],["__file","24-11-02-init.html.vue"]]),u=JSON.parse('{"path":"/posts/24-11-02-init.html","title":"建站","lang":"zh-CN","frontmatter":{"date":"2024-11-02T00:00:00.000Z","category":["Tech"],"tag":["VuePress"]},"headers":[{"level":2,"title":"原则","slug":"原则","link":"#原则","children":[]},{"level":2,"title":"技术栈","slug":"技术栈","link":"#技术栈","children":[]},{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"本地搭建","slug":"本地搭建","link":"#本地搭建","children":[{"level":3,"title":"依赖环境","slug":"依赖环境","link":"#依赖环境","children":[]},{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]},{"level":3,"title":"运行项目","slug":"运行项目","link":"#运行项目","children":[]},{"level":3,"title":"配置项目","slug":"配置项目","link":"#配置项目","children":[]},{"level":3,"title":"主题","slug":"主题","link":"#主题","children":[]}]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"NGINX 配置","slug":"nginx-配置","link":"#nginx-配置","children":[]},{"level":3,"title":"测试 WebHook","slug":"测试-webhook","link":"#测试-webhook","children":[]}]}],"git":{"updatedTime":1735398910000,"contributors":[{"name":"Yule Fox","email":"yulefox@gmail.com","commits":12}]},"filePathRelative":"posts/24-11-02-init.md","excerpt":"\\n<p>我是比较守旧的人，在自媒体和短视频如此发达的今天，我还是想有自己的一个博客，以前也断断续续搞过几次，总是虎头蛇尾，不了了之。</p>\\n<h2>原则</h2>\\n<ul>\\n<li>前后端分离</li>\\n<li>内容（Markdown）与样式分离</li>\\n<li>GitOps，自动部署</li>\\n</ul>\\n<h2>技术栈</h2>\\n<p>我对前端不甚了了，每次上手都是浅尝辄止，希望这次能走得远一点。</p>\\n<ul>\\n<li>VuePress</li>\\n</ul>\\n<h2>准备</h2>\\n<p>为域名进行工信部和公安部备案。</p>\\n<h2>本地搭建</h2>\\n<p>根据 <a href=\\"https://v2.vuepress.vuejs.org/zh/guide/getting-started.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">VuePress 文档</a> 来的。</p>"}');export{o as comp,u as data};
